[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "expense-tracker"
version = "1.0.3"
description = "Expense Tracker API built with FastAPI"
readme = "README.md"
requires-python = ">=3.9"
dependencies = [
    "fastapi>=0.104.0",
    "python-dotenv>=1.0.0",
    "pydantic>=2.0.0",
    "pymongo>=4.6.0",
    "requests>=2.31.0",
    "uvicorn[standard]>=0.24.0",
    "gunicorn>=21.2.0",
    "dnspython>=2.4.0",
    "python-dateutil>=2.9.0",
    "jinja2>=3.1.0",
    "fpdf2>=2.7.0",
]

[project.optional-dependencies]
dev = [
    "ruff",
    "mypy",
    "pytest",
    "coverage",
]

[tool.uv]
dev-dependencies = [
    "ruff",
    "mypy",
    "pytest",
    "coverage",
]

[tool.ruff]
line-length = 88
target-version = "py39"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by ruff format
    "B008",  # do not perform function calls in argument defaults (FastAPI pattern)
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.coverage.run]
source = ["app"]
omit = ["*/tests/*", "*/__pycache__/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]

[tool.hatch.build.targets.wheel]
packages = ["app"]